<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:controls="clr-namespace:Nickprovs.Albatross.Controls"
             xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"  
             xmlns:converters="clr-namespace:Nickprovs.Albatross.Converters"
             xmlns:expandable="clr-namespace:Expandable;assembly=ExpandableView"
             xmlns:behaviors="clr-namespace:Prism.Behaviors;assembly=Prism.Forms"
             prism:ViewModelLocator.AutowireViewModel="True"
             x:Class="Nickprovs.Albatross.Views.SimulatorPage"             
             x:Name="simulatorPage"
             Title="{Binding Title}"
             BackgroundColor="{DynamicResource B2}">
    <ContentPage.Resources>
        <converters:PercentageConverter x:Key="Percentage" />
        <converters:DecimalToPercentageConverter x:Key="DecimalToPercentage" />
    </ContentPage.Resources>
    <ContentPage.Content>

        <Grid>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            
            <Grid x:Name="TopHalf" Grid.Row="0">
                <ScrollView BackgroundColor="{DynamicResource B2}" x:Name="TopHalfScrollViewer">

                    <StackLayout Orientation="Vertical">
                        <!--Main Options / Plot Buttons-->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40*"/>
                                <RowDefinition Height="60*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10*"/>
                                <ColumnDefinition Width="980*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <!--Buttons and Switches-->
                            <Grid Grid.Row="0" Grid.Column="1">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="290*"/>
                                    <ColumnDefinition Width="290*"/>
                                    <ColumnDefinition Width="210*"/>
                                    <ColumnDefinition Width="210*"/>
                                </Grid.ColumnDefinitions>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2*"/>
                                    <RowDefinition Height="6*"/>
                                    <RowDefinition Height="2*"/>
                                </Grid.RowDefinitions>

                                <Button Command="{Binding SimulateWaveCommand}" Grid.Row="1" Grid.Column="0" Text="Wave" BackgroundColor="{DynamicResource B5}" BorderColor="{DynamicResource B6}" TextColor="{DynamicResource F1}"/>
                                <Button Command="{Binding SimulateOrbitCommand}" Grid.Row="1" Grid.Column="1" Text="Orbit" BackgroundColor="{DynamicResource B5}" BorderColor="{DynamicResource B6}" TextColor="{DynamicResource F1}"/>
                                
                                <StackLayout Orientation="Vertical" Grid.Row="1" Grid.Column="2">
                                    <Label BindingContext="{x:Reference PeriastronPrecessionLabel}" HeightRequest="{Binding Height}" HorizontalOptions="Center" Text="Inspiral" TextColor="{DynamicResource F1}"/>
                                    <Switch IsToggled="{Binding CurrentSimulatorInput.Inspiral, Mode=TwoWay}" VerticalOptions="Center" HorizontalOptions="Center" OnColor="{DynamicResource F7}"/>
                                </StackLayout>

                                <StackLayout Orientation="Vertical" Grid.Row="1" Grid.Column="3">
                                    <Label x:Name="PeriastronPrecessionLabel" HorizontalOptions="Center" Text="Peri. Prec." TextColor="{DynamicResource F1}"/>
                                    <Switch IsToggled="{Binding CurrentSimulatorInput.PeriastronPrecession, Mode=TwoWay}" VerticalOptions="Center" HorizontalOptions="Center" OnColor="{DynamicResource F7}"/>
                                </StackLayout>
                            </Grid>


                            <!--Main Sliders-->
                            <Grid Grid.Row="1" Grid.Column="1">

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!--Mass 1-->
                                <StackLayout Grid.Row="0" Orientation="Vertical">
                                    <!--Label / Value-->
                                    <Grid Margin="14,0,10,0">
                                        <StackLayout HorizontalOptions="Start" VerticalOptions="Center" Orientation="Horizontal">
                                            <Label x:Name="Mass1Label" Text="Mass 1:" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                            <Label Text="{Binding Value, Source={x:Reference Mass1Slider}, StringFormat='{0:0.##}'}" WidthRequest="44" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                        </StackLayout>
                                        <controls:Icon HorizontalOptions="End" VerticalOptions="Center" HeightRequest="{Binding Path=FontSize, Source={x:Reference Mass1Label}}" ResourceId= "{DynamicResource solar_mass}" Stroke="{DynamicResource F1}"/>
                                    </Grid>

                                    <!--Unit-->                                
                                    <Slider x:Name="Mass1Slider" Maximum="20" Minimum="3" Value="{Binding CurrentSimulatorInput.SolarMass1}" ThumbColor="{DynamicResource F7}" MaximumTrackColor="{DynamicResource F3}" MinimumTrackColor="{DynamicResource F7}"/>
                                </StackLayout>

                                <!--Mass 2-->
                                <StackLayout Grid.Row="1" Orientation="Vertical">
                                    <!--Label / Value-->
                                    <Grid Margin="14,0,10,0">
                                        <StackLayout HorizontalOptions="Start" VerticalOptions="Center" Orientation="Horizontal">
                                            <Label x:Name="Mass2Label" Text="Mass 2:" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                            <Label Text="{Binding Value, Source={x:Reference Mass2Slider}, StringFormat='{0:0.##}'}" WidthRequest="44" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                        </StackLayout>
                                        <controls:Icon HorizontalOptions="End" VerticalOptions="Center" HeightRequest="{Binding Path=FontSize, Source={x:Reference Mass2Label}}" ResourceId= "{DynamicResource solar_mass}" Stroke="{DynamicResource F1}"/>
                                    </Grid>

                                    <!--Unit-->
                                    <Slider x:Name="Mass2Slider" Maximum="20" Minimum="3" Value="{Binding CurrentSimulatorInput.SolarMass2}" ThumbColor="{DynamicResource F7}" MaximumTrackColor="{DynamicResource F3}" MinimumTrackColor="{DynamicResource F7}"/>
                                </StackLayout>

                                <!--Initial Eccentricity-->
                                <StackLayout Grid.Row="2" Orientation="Vertical">
                                    <!--Label / Value-->
                                    <Grid Margin="14,0,28,0">
                                        <StackLayout HorizontalOptions="Start" VerticalOptions="Center" Orientation="Horizontal">
                                            <Label x:Name="InitialEccentricityLabel" Text="Initial Eccentricity:" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                            <Label Text="{Binding Value, Source={x:Reference InitialEccentricitySlider}, Converter={StaticResource DecimalToPercentage}, Mode=TwoWay, StringFormat='{0:0.##}'}" WidthRequest="44" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                        </StackLayout>
                                        <Label HorizontalOptions="End" Text="%" TextColor="{DynamicResource F1}"/>
                                    </Grid>

                                    <!--Unit-->
                                    <Slider x:Name="InitialEccentricitySlider" Maximum="0.9" Minimum="0" Value="{Binding CurrentSimulatorInput.InitialEccentricity}" ThumbColor="{DynamicResource F7}" MaximumTrackColor="{DynamicResource F3}" MinimumTrackColor="{DynamicResource F7}"/>
                                </StackLayout>

                            </Grid>
                        </Grid>

                        <!--Additional Options-->
                        <Grid x:Name="AdditionalOptions">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="96*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>


                            <expandable:ExpandableView StatusChanged="ExpandableView_StatusChanged" Grid.Row="0" Grid.Column="1" TouchHandlerView="{x:Reference Expander}" IsTouchToExpandEnabled="True">
                                <expandable:ExpandableView.Behaviors>
                                    <behaviors:EventToCommandBehavior EventName="StatusChanged" Command="{Binding MoreOptionsExpansionStatusChangedCommand}" EventArgsParameterPath="Status"/>
                                </expandable:ExpandableView.Behaviors>
                                <expandable:ExpandableView.PrimaryView>
                                    <StackLayout x:Name="Expander" Orientation="Horizontal" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                        <Label x:Name="MoreOptionsLabel" FontSize="Medium" Text="More Options" Margin="0,0,0,15" TextColor="{DynamicResource F1}"/>
                                        <controls:Icon VerticalOptions="Center" BindingContext="{x:Reference MoreOptionsLabel}" HeightRequest="{Binding Path=FontSize}" Margin="{Binding Margin}" ResourceId= "{Binding BindingContext.MoreOptionsIconPath}" Stroke="{DynamicResource F1}"/>
                                    </StackLayout>
                                </expandable:ExpandableView.PrimaryView>
                                <expandable:ExpandableView.SecondaryViewTemplate>
                                    <DataTemplate>
                                        <Grid x:Name="ExpandableOptions">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>


                                            <!--Detector Angle Little Theta-->
                                            <StackLayout Grid.Row="0" Orientation="Vertical">
                                                <!--Text-->
                                                <Grid Margin="14,0,10,0">
                                                    <!--Label / Value-->
                                                    <StackLayout HorizontalOptions="Start" VerticalOptions="Center" Orientation="Horizontal">
                                                        <Label x:Name="LittleThetaLabel" Text="Detector Angle" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                                        <controls:Icon Margin="-14,0,-18,0" VerticalOptions="Center" BindingContext="{x:Reference LittleThetaLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource lowercase_theta}" Stroke="{DynamicResource F1}"/>
                                                        <Label Text=":" TextColor="{DynamicResource F1}"/>
                                                        <Label x:Name="LittleThetaValueLabel" BindingContext="{x:Reference LittleThetaSlider}" Text="{Binding Value, StringFormat='{0:0.##}'}" TextColor="{DynamicResource F1}"/>
                                                    </StackLayout>
                                                    <!--Unit-->
                                                    <controls:Icon HorizontalOptions="End" Margin="-12,0,0,0" VerticalOptions="Center" BindingContext="{x:Reference LittleThetaValueLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource pi}" Stroke="{DynamicResource F1}"/>
                                                </Grid>

                                                <!--Slider Input-->
                                                <Slider Minimum="0" Maximum="2" x:Name="LittleThetaSlider" Value="{Binding CurrentSimulatorInput.DetectorAngleLittleTheta}" ThumbColor="{DynamicResource F7}" MaximumTrackColor="{DynamicResource F3}" MinimumTrackColor="{DynamicResource F7}"/>
                                            </StackLayout>

                                            <!--Detector Angle Big Theta-->
                                            <StackLayout Grid.Row="1" Orientation="Vertical">
                                                <!--Text-->
                                                <Grid Margin="14,0,10,0">
                                                    <!--Label / Value-->
                                                    <StackLayout HorizontalOptions="Start" VerticalOptions="Center" Orientation="Horizontal">
                                                        <Label x:Name="BigThetaLabel" Text="Detector Angle" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                                        <controls:Icon Margin="-14,0,-18,0" VerticalOptions="Center" BindingContext="{x:Reference BigThetaLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource uppercase_theta}" Stroke="{DynamicResource F1}"/>
                                                        <Label Text=":" TextColor="{DynamicResource F1}"/>
                                                        <Label x:Name="BigThetaValueLabel" BindingContext="{x:Reference BigThetaSlider}" Text="{Binding Value, StringFormat='{0:0.##}'}" TextColor="{DynamicResource F1}"/>
                                                    </StackLayout>
                                                    <!--Unit-->
                                                    <controls:Icon HorizontalOptions="End" Margin="-12,0,0,0" VerticalOptions="Center" BindingContext="{x:Reference BigThetaValueLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource pi}" Stroke="{DynamicResource F1}"/>
                                                </Grid>

                                                <!--Slider Input-->
                                                <Slider Minimum="0" Maximum="2" x:Name="BigThetaSlider" Value="{Binding CurrentSimulatorInput.DetectorAngleBigTheta}" ThumbColor="{DynamicResource F7}" MaximumTrackColor="{DynamicResource F3}" MinimumTrackColor="{DynamicResource F7}"/>
                                            </StackLayout>

                                            <!--Detector Angle Little Phi-->
                                            <StackLayout Grid.Row="2" Orientation="Vertical">
                                                <!--Text-->
                                                <Grid Margin="14,0,10,0">
                                                    <!--Label / Value-->
                                                    <StackLayout HorizontalOptions="Start" VerticalOptions="Center" Orientation="Horizontal">
                                                        <Label x:Name="LittlePhiLabel" Text="Detector Angle" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                                        <controls:Icon Margin="-14,0,-18,0" VerticalOptions="Center" BindingContext="{x:Reference LittlePhiLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource lowercase_phi}" Stroke="{DynamicResource F1}"/>
                                                        <Label Text=":" TextColor="{DynamicResource F1}"/>
                                                        <Label x:Name="LittlePhiValueLabel" BindingContext="{x:Reference LittlePhiSlider}" Text="{Binding Value, StringFormat='{0:0.##}'}" TextColor="{DynamicResource F1}"/>
                                                    </StackLayout>
                                                    <!--Unit-->
                                                    <controls:Icon HorizontalOptions="End" Margin="-12,0,0,0" VerticalOptions="Center" BindingContext="{x:Reference LittlePhiValueLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource pi}" Stroke="{DynamicResource F1}"/>
                                                </Grid>

                                                <!--Slider Input-->
                                                <Slider Minimum="0" Maximum="2" x:Name="LittlePhiSlider" Value="{Binding CurrentSimulatorInput.DetectorAngleLittlePhi}" ThumbColor="{DynamicResource F7}" MaximumTrackColor="{DynamicResource F3}" MinimumTrackColor="{DynamicResource F7}"/>
                                            </StackLayout>

                                            <!--Detector Angle Big Phi-->
                                            <StackLayout Grid.Row="3" Orientation="Vertical">
                                                <!--Text-->
                                                <Grid Margin="14,0,10,0">
                                                    <!--Label / Value-->
                                                    <StackLayout HorizontalOptions="Start" VerticalOptions="Center" Orientation="Horizontal">
                                                        <Label x:Name="BigPhiLabel" Text="Detector Angle" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                                        <controls:Icon Margin="-14,0,-18,0" VerticalOptions="Center" BindingContext="{x:Reference BigPhiLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource uppercase_phi}" Stroke="{DynamicResource F1}"/>
                                                        <Label Text=":" TextColor="{DynamicResource F1}"/>
                                                        <Label x:Name="BigPhiValueLabel" BindingContext="{x:Reference BigPhiSlider}" Text="{Binding Value, StringFormat='{0:0.##}'}" TextColor="{DynamicResource F1}"/>
                                                    </StackLayout>
                                                    <!--Unit-->
                                                    <controls:Icon HorizontalOptions="End" Margin="-12,0,0,0" VerticalOptions="Center" BindingContext="{x:Reference BigPhiValueLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource pi}" Stroke="{DynamicResource F1}"/>
                                                </Grid>

                                                <!--Slider Input-->
                                                <Slider Minimum="0" Maximum="2" x:Name="BigPhiSlider" Value="{Binding CurrentSimulatorInput.DetectorAngleBigPhi}" ThumbColor="{DynamicResource F7}" MaximumTrackColor="{DynamicResource F3}" MinimumTrackColor="{DynamicResource F7}"/>
                                            </StackLayout>

                                            <!--Detector Angle Psi-->
                                            <StackLayout Grid.Row="4" Orientation="Vertical">
                                                <!--Text-->
                                                <Grid Margin="14,0,10,0">
                                                    <!--Label / Value-->
                                                    <StackLayout HorizontalOptions="Start" VerticalOptions="Center" Orientation="Horizontal">
                                                        <Label x:Name="PsiLabel" Text="Detector Angle" HorizontalOptions="Start" TextColor="{DynamicResource F1}"/>
                                                        <controls:Icon Margin="-14,0,-18,0" VerticalOptions="Center" BindingContext="{x:Reference PsiLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource psi}" Stroke="{DynamicResource F1}"/>
                                                        <Label Text=":" TextColor="{DynamicResource F1}"/>
                                                        <Label x:Name="PsiValueLabel" BindingContext="{x:Reference PsiSlider}" Text="{Binding Value, StringFormat='{0:0.##}'}" TextColor="{DynamicResource F1}"/>
                                                    </StackLayout>
                                                    <!--Unit-->
                                                    <controls:Icon HorizontalOptions="End" Margin="-12,0,0,0" VerticalOptions="Center" BindingContext="{x:Reference PsiValueLabel}" HeightRequest="{Binding Path=FontSize}" ResourceId= "{DynamicResource pi}" Stroke="{DynamicResource F1}"/>
                                                </Grid>

                                                <!--Slider Input-->
                                                <Slider Minimum="0" Maximum="2" x:Name="PsiSlider" Value="{Binding CurrentSimulatorInput.DetectorAnglePsi}" ThumbColor="{DynamicResource F7}" MaximumTrackColor="{DynamicResource F3}" MinimumTrackColor="{DynamicResource F7}"/>
                                            </StackLayout>
                                        </Grid>
                                    </DataTemplate>
                                </expandable:ExpandableView.SecondaryViewTemplate>
                            </expandable:ExpandableView>
                        </Grid>
                    </StackLayout>

                </ScrollView>
            </Grid>


            <Grid BackgroundColor="Black" Grid.Row="1"/>
            
        </Grid>

    </ContentPage.Content>
</ContentPage>